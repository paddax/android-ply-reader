package com.powdermonkey.mapping.v3n3t2;

import android.opengl.GLES20;

public class V3N3T2 {

	public static final String MVP_MATRIX_UNIFORM = "u_MVPMatrix";
	public static final String MV_MATRIX_UNIFORM = "u_MVMatrix";
	public static final String LIGHT_POSITION_UNIFORM = "u_LightPos";
	public static final String COLOR_UNIFORM = "u_Color";
	public static final String TEXTURE_UNIFORM = "u_Texture";

	public static final String POSITION_ATTRIBUTE = "a_Position";
	public static final String NORMAL_ATTRIBUTE = "a_Normal";
	public static final String TEX_ATTRIBUTE = "a_TexCoordinate";

	/** Size of the position data in elements. */
	static final int POSITION_DATA_SIZE = 3;

	/** Size of the normal data in elements. */
	static final int NORMAL_DATA_SIZE = 3;

	static final int COLOR_DATA_SIZE = 4;

	/** Size of the texture coordinate data in elements. */
	static final int TEXTURE_COORDINATE_DATA_SIZE = 2;

	/** How many bytes per float. */
	public static final int BYTES_PER_FLOAT = 4;
	public static final int BYTES_PER_INT = 2;

	public static final int STRIDE = (POSITION_DATA_SIZE + NORMAL_DATA_SIZE + TEXTURE_COORDINATE_DATA_SIZE)
			* BYTES_PER_FLOAT;

	/** used by VBO */
	static final int BYTES_PER_SHORT = 2;
	public static final int POSITION_DATA_OFFSET = 0;
	public static final int NORMAL_DATA_OFFSET = POSITION_DATA_SIZE * BYTES_PER_FLOAT;
	public static final int TEXTURE_COORDINATE_DATA_OFFSET = NORMAL_DATA_OFFSET + (NORMAL_DATA_SIZE * BYTES_PER_FLOAT);

	// int mMatrixUniform;
	public int mvpMatrixUniform;
	public int mvMatrixUniform;
	public int lightPosUniform;
	public int colorUniform;
	public int textureUniform;

	/*
	 * The following are generated by a call to prepare but the current
	 * architecture makes this very difficult. These are therefore hard-coded to
	 * the values that the shader would create anyway. This is a potential for
	 * really tricky to find errors some time in the future
	 */
	public int positionAttribute = 0;
	public int normalAttribute = 1;
	public int textureAttribute = 2;

	public void prepare(int program) {
		mvpMatrixUniform = GLES20.glGetUniformLocation(program, MVP_MATRIX_UNIFORM);
		mvMatrixUniform = GLES20.glGetUniformLocation(program, MV_MATRIX_UNIFORM);
		colorUniform = GLES20.glGetUniformLocation(program, COLOR_UNIFORM);
		lightPosUniform = GLES20.glGetUniformLocation(program, LIGHT_POSITION_UNIFORM);
		textureUniform = GLES20.glGetUniformLocation(program, TEXTURE_UNIFORM);

		positionAttribute = GLES20.glGetAttribLocation(program, POSITION_ATTRIBUTE);
		normalAttribute = GLES20.glGetAttribLocation(program, NORMAL_ATTRIBUTE);
		textureAttribute = GLES20.glGetAttribLocation(program, TEX_ATTRIBUTE);

	}
}
